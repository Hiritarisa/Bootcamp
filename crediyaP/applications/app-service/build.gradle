apply plugin: 'org.springframework.boot'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    // M칩dulos internos
    implementation project(':reactive-web')
    implementation project(':r2dbc-postgresql')
    implementation project(':model')
    implementation project(':usecase')

    // WebFlux + Validaci칩n + Actuator
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // R2DBC (transacciones reactivas est치n en este starter)
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    runtimeOnly  'org.postgresql:r2dbc-postgresql'   // <- sin versi칩n (la maneja Spring Boot)

    // OpenAPI (Swagger UI)
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.5.0'

    // Utilidades
    implementation 'org.reactivecommons.utils:object-mapper:0.1.0'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Tests
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'com.tngtech.archunit:archunit:1.4.1'
    testImplementation 'com.tngtech.archunit:archunit-junit5:1.4.1'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind'
}

tasks.register('explodedJar', Copy) {
    with jar
    into layout.buildDirectory.dir("exploded")
}

jar { enabled = false }

bootJar {
    archiveFileName = "${project.getParent().getName()}.${archiveExtension.get()}"
}